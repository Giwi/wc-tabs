/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  IWcTabContentData,
  IWcTabHeaderData,
} from './utils/model';

export namespace Components {
  interface WcTabs {
    'selection': number;
  }
  interface WcTabsContent {
    /**
    * @returns
    */
    'getChild': () => Promise<IWcTabContentData>;
    'name': string;
    'responsive': boolean;
  }
  interface WcTabsHeader {
    'disabled': boolean;
    /**
    * @returns
    */
    'getChild': () => Promise<IWcTabHeaderData>;
    'name': string;
  }
}

declare global {


  interface HTMLWcTabsElement extends Components.WcTabs, HTMLStencilElement {}
  var HTMLWcTabsElement: {
    prototype: HTMLWcTabsElement;
    new (): HTMLWcTabsElement;
  };

  interface HTMLWcTabsContentElement extends Components.WcTabsContent, HTMLStencilElement {}
  var HTMLWcTabsContentElement: {
    prototype: HTMLWcTabsContentElement;
    new (): HTMLWcTabsContentElement;
  };

  interface HTMLWcTabsHeaderElement extends Components.WcTabsHeader, HTMLStencilElement {}
  var HTMLWcTabsHeaderElement: {
    prototype: HTMLWcTabsHeaderElement;
    new (): HTMLWcTabsHeaderElement;
  };
  interface HTMLElementTagNameMap {
    'wc-tabs': HTMLWcTabsElement;
    'wc-tabs-content': HTMLWcTabsContentElement;
    'wc-tabs-header': HTMLWcTabsHeaderElement;
  }
}

declare namespace LocalJSX {
  interface WcTabs {
    'selection'?: number;
  }
  interface WcTabsContent {
    'name'?: string;
    'responsive'?: boolean;
  }
  interface WcTabsHeader {
    'disabled'?: boolean;
    'name'?: string;
    'onOnSelect'?: (event: CustomEvent<any>) => void;
  }

  interface IntrinsicElements {
    'wc-tabs': WcTabs;
    'wc-tabs-content': WcTabsContent;
    'wc-tabs-header': WcTabsHeader;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'wc-tabs': LocalJSX.WcTabs & JSXBase.HTMLAttributes<HTMLWcTabsElement>;
      'wc-tabs-content': LocalJSX.WcTabsContent & JSXBase.HTMLAttributes<HTMLWcTabsContentElement>;
      'wc-tabs-header': LocalJSX.WcTabsHeader & JSXBase.HTMLAttributes<HTMLWcTabsHeaderElement>;
    }
  }
}


